[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 473
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "-_fRe_F8kj",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 473
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 473
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "AitBaQ4PXw",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 473
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "AitBaQ4PXw",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "AitBaQ4PXw",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "9iwl1yTW1K",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "employees-faces",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "9iwl1yTW1K",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "employees-faces",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employees-faces",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employees-faces",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 323
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "cwh629Gdt0",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 323
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "cwh629Gdt0",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "cwh629Gdt0",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 377
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "mDUu4gtcnv",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 377
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 377
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "WhkATtZ8Q7",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 377
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "WhkATtZ8Q7",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "WhkATtZ8Q7",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 430
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zNe5J2WXfL",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 430
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zNe5J2WXfL",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zNe5J2WXfL",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 377
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "KWyr7BUlBU",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 377
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 377
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "-rJk3Ht74d",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 377
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/properties/data/flow: {
	"action": "rxjs/properties/data/flow",
	"params": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "-rJk3Ht74d",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/properties/data/flow"
}
[info] [CLI] Calling Query rxjs/properties/data/flow: {
	"funcParams": {
		"actionId": "RXJS_PROPERTY_CREATE",
		"label": "Create Data Property",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/properties/data/flow"
}
[info] [CLI] Called Query rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeesFacesComponent",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeesFacesComponent": [],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/properties/data/flow"
}
[info] [API] Response ok: rxjs/properties/data/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the property name?",
				"subtitle": "in camelCase (e.g. data, dataSource)",
				"type": "text-input"
			},
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeesFacesComponent",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeesFacesComponent": [],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/properties/data/create",
				"payload": {
					"propertyName": "name.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/properties/data/flow"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "wVswoD7i-C",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "employee",
		"entityId": "dataService"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "wVswoD7i-C",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "employee",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
		"name": "employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
		"name": "employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 89
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "RgnQSVsp7U",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 89
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "RgnQSVsp7U",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 89
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "bdC5nmeqcT",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 89
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "bdC5nmeqcT",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "bdC5nmeqcT",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 730
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "0MWLUEbJzK",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 730
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 729
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "btCaeJtGfW",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 729
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 443
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "QxoxgyGX3v",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 443
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "QxoxgyGX3v",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
		"position": 229
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "tSELEM6apo",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
		"position": 229
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[error] [API]: Error Entity not found for suffix: service-module: {
	"loggerData": {
		"action": "entity/actions",
		"params": {
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
			"position": 229
		},
		"context": {
			"workspace": {
				"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
			},
			"userContext": {
				"id": "OgE52sTLuS",
				"correlationId": "tSELEM6apo",
				"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
				"logEnvId": "development"
			}
		}
	},
	"error": {},
	"stack": "Error: Entity not found for suffix: service-module\n    at getEntityActions (/Users/lukaszchoragwicki/Library/Application Support/JetBrains/WebStorm2022.2/plugins/LowgularJPlugin/cli/main.js:6597:15)\n    at async callQueryCli (/Users/lukaszchoragwicki/Library/Application Support/JetBrains/WebStorm2022.2/plugins/LowgularJPlugin/cli/main.js:8540:20)\n    at async callHandler (/Users/lukaszchoragwicki/Library/Application Support/JetBrains/WebStorm2022.2/plugins/LowgularJPlugin/cli/main.js:16691:27)",
	"level": "error",
	"message": "[API]: Error Entity not found for suffix: service-module"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 233
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "sb_zmlXU3A",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 233
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 567
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "MwEezy5SMG",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 567
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent",
			"parentProperty": "data$"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent",
			"parentProperty": "data$"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 718
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "5ERwmqTOck",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 718
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 780
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "CFNH2P4Pkw",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 780
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 784
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "_VY2fSAgK8",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 784
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "_VY2fSAgK8",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "_VY2fSAgK8",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 665
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "t6DsIPsups",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 665
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent",
			"parentProperty": "data$"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent",
			"parentProperty": "data$"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "t6DsIPsups",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "t6DsIPsups",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "msJ9krBfxJ",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "qz-uazNl68",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "person",
		"properties": {
			"personNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "qz-uazNl68",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "person",
		"properties": {
			"personNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "person",
		"suffix": "Model",
		"properties": {
			"personNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "person",
		"suffix": "Model",
		"properties": {
			"personNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model/person.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "WZYjx_fIQ8",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "ProjectModel",
		"properties": {
			"id": "string",
			"name": "string",
			"owner": "string",
			"description": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "WZYjx_fIQ8",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "ProjectModel",
		"properties": {
			"id": "string",
			"name": "string",
			"owner": "string",
			"description": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "ProjectModel",
		"suffix": "Model",
		"properties": {
			"id": "string",
			"name": "string",
			"owner": "string",
			"description": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "ProjectModel",
		"suffix": "Model",
		"properties": {
			"id": "string",
			"name": "string",
			"owner": "string",
			"description": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model/project.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "cbUCNyuSte",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "ProjectService",
		"entityId": "dataService"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "cbUCNyuSte",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "ProjectService",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
		"name": "ProjectService",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
		"name": "ProjectService",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 88
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zhL3NJqyPP",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 88
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zhL3NJqyPP",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zhL3NJqyPP",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
		"position": 229
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "hqWI9vqoN8",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
		"position": 229
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[error] [API]: Error Entity not found for suffix: service-module: {
	"loggerData": {
		"action": "entity/actions",
		"params": {
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
			"position": 229
		},
		"context": {
			"workspace": {
				"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
			},
			"userContext": {
				"id": "OgE52sTLuS",
				"correlationId": "hqWI9vqoN8",
				"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts",
				"logEnvId": "development"
			}
		}
	},
	"error": {},
	"stack": "Error: Entity not found for suffix: service-module\n    at getEntityActions (/Users/lukaszchoragwicki/Library/Application Support/JetBrains/WebStorm2022.2/plugins/LowgularJPlugin/cli/main.js:6597:15)\n    at async callQueryCli (/Users/lukaszchoragwicki/Library/Application Support/JetBrains/WebStorm2022.2/plugins/LowgularJPlugin/cli/main.js:8540:20)\n    at async callHandler (/Users/lukaszchoragwicki/Library/Application Support/JetBrains/WebStorm2022.2/plugins/LowgularJPlugin/cli/main.js:16691:27)",
	"level": "error",
	"message": "[API]: Error Entity not found for suffix: service-module"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 194
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "EJGspOpReK",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 194
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "EJGspOpReK",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<ProjectModel[]>"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "EJGspOpReK",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "getAll",
		"params": {},
		"returnType": "Observable<ProjectModel[]>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<ProjectModel[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"name": "getAll",
		"params": {},
		"returnType": "Observable<ProjectModel[]>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 325
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "TrlhWflxJH",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 325
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "TrlhWflxJH",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "TrlhWflxJH",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 329
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "u7lnbC_9u3",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 329
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "WOUiPiW9sU",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "ProjectListComponent",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "WOUiPiW9sU",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "ProjectListComponent",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "ProjectListComponent",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "ProjectListComponent",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"position": 316
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "s84QGOgjTa",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"position": 316
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "s84QGOgjTa",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"injectingPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "s84QGOgjTa",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"injectingPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"injectingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"injectingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"position": 436
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "oGvwVFmFtb",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"position": 436
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "oGvwVFmFtb",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "oGvwVFmFtb",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/project-list-component/project-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "QQrYhYPGUU",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "xYn49pEoMV",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "EmployeeForm",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "xYn49pEoMV",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "EmployeeForm",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "EmployeeForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "EmployeeForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 319
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "a4ALBkoC58",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 319
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 319
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "Vqr_2TrSyI",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 319
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "Vqr_2TrSyI",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 319
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "INZKANsLy_",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 319
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "employeeForm",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "INZKANsLy_",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "employeeForm",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "employeeForm",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "employeeForm",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "O_NPELxi22",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "O_NPELxi22",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [
		{
			"label": "employeeForm",
			"templateType": "forms",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [
		{
			"label": "employeeForm",
			"templateType": "forms",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "forms"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "O_NPELxi22",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "form",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "forms"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "form",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-form: {
	"action": "angular-component/templates/add-form",
	"params": {
		"componentHtmlFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"position": 0,
		"propertyName": "employeeForm",
		"formTemplate": "form"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "O_NPELxi22",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-form"
}
[info] [CLI] Calling Command angular-component/templates/add-form: {
	"funcParams": {
		"componentHtmlFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"position": 0,
		"propertyName": "employeeForm",
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-form"
}
[info] [CommandBus]: Dispatching command AddFormToTemplateCommand: {
	"commandName": "AddFormToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
		"componentTs": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentHtml": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"className": "EmployeeFormComponent",
		"propertyName": "employeeForm",
		"position": 0,
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddFormToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddFormToTemplateCommand: {
	"commandName": "AddFormToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
		"componentTs": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentHtml": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"className": "EmployeeFormComponent",
		"propertyName": "employeeForm",
		"position": 0,
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddFormToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-form: {
	"message": "[CLI] Called Command angular-component/templates/add-form",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-form: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-form"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "cK6vLKa0_Y",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "createEmployee",
		"properties": {
			"email": "string",
			"age": "number",
			"salary": "number"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "cK6vLKa0_Y",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "createEmployee",
		"properties": {
			"email": "string",
			"age": "number",
			"salary": "number"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "createEmployee",
		"suffix": "Model",
		"properties": {
			"email": "string",
			"age": "number",
			"salary": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "createEmployee",
		"suffix": "Model",
		"properties": {
			"email": "string",
			"age": "number",
			"salary": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model/create-employee.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 1005
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "Teeof4Xp6y",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 1005
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onEmployeeFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onEmployeeFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 406
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "M_1y6Tkjap",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 406
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "M_1y6Tkjap",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 402
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "sfE7UT5QaJ",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 402
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 402
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "8t9S-eBWo5",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 402
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "8t9S-eBWo5",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "create",
		"params": {},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "8t9S-eBWo5",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "create",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "create",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "create",
		"params": {},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "Nu0Q7jT8tN",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "np-vhQYx84",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "np-vhQYx84",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "np-vhQYx84",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "6aiV4S4khc",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "6aiV4S4khc",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "6aiV4S4khc",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 537
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "YOnrK3KHV3",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 537
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "YOnrK3KHV3",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "YOnrK3KHV3",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 537
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "jm9OB8t7qO",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 537
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"create"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "jm9OB8t7qO",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"create"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"create"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"create"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zt4xlF5Toj",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zt4xlF5Toj",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "zt4xlF5Toj",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "B6HKOV6XkB",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 533
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"create"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "B6HKOV6XkB",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"create"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"create"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"create"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"create"
		],
		"dependencyCallPath": [
			"post"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "B6HKOV6XkB",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"create"
		],
		"dependencyCallPath": [
			"post"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"callPath": [
			"create"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"post"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"callPath": [
			"create"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"post"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 1005
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "B5bqMGElO1",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 1005
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onFormSubmitted"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onEmployeeFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onFormSubmitted"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onEmployeeFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onEmployeeFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"onFormSubmitted"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "B5bqMGElO1",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"onFormSubmitted"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"onFormSubmitted"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeFormComponent",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
					},
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "ProjectService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeFormComponent": [],
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						}
					],
					"ProjectService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"onFormSubmitted"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeFormComponent",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
					},
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "ProjectService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeFormComponent": [],
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						}
					],
					"ProjectService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"onFormSubmitted"
		],
		"dependencyCallPath": [
			"create"
		],
		"dependencyType": "EmployeeService",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "B5bqMGElO1",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"onFormSubmitted"
		],
		"dependencyCallPath": [
			"create"
		],
		"dependencyType": "EmployeeService",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"callPath": [
			"onFormSubmitted"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"dependencyType": "EmployeeService",
		"dependencyCallPath": [
			"create"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"callPath": [
			"onFormSubmitted"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"dependencyType": "EmployeeService",
		"dependencyCallPath": [
			"create"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 661
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "I4aAsCjZAH",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 661
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "I4aAsCjZAH",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 657
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "kqchiUy7db",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 657
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "kqchiUy7db",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "kqchiUy7db",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 736
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "A7xFd1R49F",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 736
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "A7xFd1R49F",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "A7xFd1R49F",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 736
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "VglN6wd_xK",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 736
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"delete"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "VglN6wd_xK",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"delete"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"delete"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"delete"
		],
		"dependencyCallPath": [
			"delete"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "VglN6wd_xK",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"delete"
		],
		"dependencyCallPath": [
			"delete"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"callPath": [
			"delete"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"callPath": [
			"delete"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 736
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "9q9_8VlyBT",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 736
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "delete"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "delete"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/call-expressions/map/flow: {
	"action": "rxjs/call-expressions/map/flow",
	"params": {
		"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
		"label": "Map Statement",
		"callPath": [
			"delete"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "9q9_8VlyBT",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/map/flow"
}
[info] [CLI] Calling Query rxjs/call-expressions/map/flow: {
	"funcParams": {
		"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
		"label": "Map Statement",
		"callPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/call-expressions/map/flow"
}
[info] [CLI] Called Query rxjs/call-expressions/map/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"delete"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "member",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "handler",
							"callPath": [
								"handler"
							]
						},
						{
							"name": "ɵfac",
							"callPath": [
								"ɵfac"
							]
						},
						{
							"name": "ɵprov",
							"callPath": [
								"ɵprov"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/map",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "member.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/call-expressions/map/flow"
}
[info] [API] Response ok: rxjs/call-expressions/map/flow: {
	"result": {
		"context": {
			"callExpression": {
				"callPath": [
					"delete"
				]
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "member",
				"title": "Which member to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "handler",
							"callPath": [
								"handler"
							]
						},
						{
							"name": "ɵfac",
							"callPath": [
								"ɵfac"
							]
						},
						{
							"name": "ɵprov",
							"callPath": [
								"ɵprov"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "entity.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/call-expressions/map",
				"payload": {
					"callExpressionCallPath": "callExpression.callPath",
					"dependencyCallPath": "member.callPath",
					"dependencyName": "entity.name",
					"dependencyPath": "entity.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/map/flow"
}
[info] [API] Request for rxjs/call-expressions/map: {
	"action": "rxjs/call-expressions/map",
	"params": {
		"callExpressionCallPath": [
			"delete"
		],
		"dependencyCallPath": [
			"delete"
		],
		"dependencyName": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "9q9_8VlyBT",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/call-expressions/map"
}
[info] [CLI] Calling Command rxjs/call-expressions/map: {
	"funcParams": {
		"callExpressionCallPath": [
			"delete"
		],
		"dependencyCallPath": [
			"delete"
		],
		"dependencyName": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/call-expressions/map"
}
[info] [CommandBus]: Dispatching command MapObservableCommand: {
	"commandName": "MapObservableCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"entityMemberCallPath": [
			"delete"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyName": "HttpClient",
		"dependencyCall": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MapObservableCommand"
}
[info] [CommandBus]: Handled  MapObservableCommand: {
	"commandName": "MapObservableCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"entityMemberCallPath": [
			"delete"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyName": "HttpClient",
		"dependencyCall": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MapObservableCommand"
}
[info] [CLI] Called Command rxjs/call-expressions/map: {
	"message": "[CLI] Called Command rxjs/call-expressions/map",
	"level": "info"
}
[info] [API] Response ok: rxjs/call-expressions/map: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/call-expressions/map"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 830
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "nPOZcFnbGM",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 830
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent",
			"parentMethod": "remove"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "remove()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"remove"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent",
			"parentMethod": "remove"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "remove()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"remove"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"remove"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "nPOZcFnbGM",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"remove"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"remove"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeListComponent",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
					},
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "ProjectService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeListComponent": [
						{
							"name": "data$",
							"callPath": [
								"data$"
							]
						}
					],
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						}
					],
					"ProjectService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"remove"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeListComponent",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
					},
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "ProjectService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/project.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					},
					{
						"name": "ActivatedRoute",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/router/router.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeListComponent": [
						{
							"name": "data$",
							"callPath": [
								"data$"
							]
						}
					],
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						}
					],
					"ProjectService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					],
					"ActivatedRoute": [
						{
							"name": "url",
							"callPath": [
								"url"
							]
						},
						{
							"name": "params",
							"callPath": [
								"params"
							]
						},
						{
							"name": "queryParams",
							"callPath": [
								"queryParams"
							]
						},
						{
							"name": "fragment",
							"callPath": [
								"fragment"
							]
						},
						{
							"name": "data",
							"callPath": [
								"data"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"remove"
		],
		"dependencyCallPath": [
			"delete"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "nPOZcFnbGM",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"remove"
		],
		"dependencyCallPath": [
			"delete"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"callPath": [
			"remove"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"callPath": [
			"remove"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"delete"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 475
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "5cz1zQelvx",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 475
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 475
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "BGqH1B104V",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 475
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "getAll"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/statement/flow: {
	"action": "rxjs/methods/statement/flow",
	"params": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "BGqH1B104V",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/flow"
}
[info] [CLI] Calling Query rxjs/methods/statement/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_STATEMENT_CREATE",
		"label": "Create Statement",
		"callPath": [
			"getAll"
		]
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/statement/flow"
}
[info] [CLI] Called Query rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/statement/flow"
}
[info] [API] Response ok: rxjs/methods/statement/flow: {
	"result": {
		"context": {
			"callPath": {
				"value": [
					"getAll"
				]
			}
		},
		"steps": [
			{
				"contextId": "dependency",
				"title": "Which dependency to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "EmployeeService",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
					},
					{
						"name": "HttpClient",
						"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
					}
				],
				"extraOptions": [],
				"property": "name"
			},
			{
				"contextId": "observable",
				"title": "Which observable to use?",
				"type": "multi-option",
				"options": {
					"EmployeeService": [
						{
							"name": "getAll()",
							"callPath": [
								"getAll"
							]
						},
						{
							"name": "create()",
							"callPath": [
								"create"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						}
					],
					"HttpClient": [
						{
							"name": "request()",
							"callPath": [
								"request"
							]
						},
						{
							"name": "delete()",
							"callPath": [
								"delete"
							]
						},
						{
							"name": "get()",
							"callPath": [
								"get"
							]
						},
						{
							"name": "head()",
							"callPath": [
								"head"
							]
						},
						{
							"name": "jsonp()",
							"callPath": [
								"jsonp"
							]
						},
						{
							"name": "options()",
							"callPath": [
								"options"
							]
						},
						{
							"name": "patch()",
							"callPath": [
								"patch"
							]
						},
						{
							"name": "post()",
							"callPath": [
								"post"
							]
						},
						{
							"name": "put()",
							"callPath": [
								"put"
							]
						}
					]
				},
				"extraOptions": [],
				"param": "dependency.name",
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "rxjs/methods/statement/create",
				"payload": {
					"callPath": "callPath.value",
					"dependencyCallPath": "observable.callPath",
					"dependencyType": "dependency.name",
					"dependencyPath": "dependency.path"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/flow"
}
[info] [API] Request for rxjs/methods/statement/create: {
	"action": "rxjs/methods/statement/create",
	"params": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "BGqH1B104V",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/statement/create"
}
[info] [CommandBus]: Dispatching command AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddCallCommand"
}
[info] [CLI] Calling Command rxjs/methods/statement/create: {
	"funcParams": {
		"callPath": [
			"getAll"
		],
		"dependencyCallPath": [
			"get"
		],
		"dependencyType": "HttpClient",
		"dependencyPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command rxjs/methods/statement/create"
}
[info] [CommandBus]: Handled  AddCallCommand: {
	"commandName": "AddCallCommand",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
		"callPath": [
			"getAll"
		],
		"dependencyFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/node_modules/@angular/common/http/http.d.ts",
		"dependencyType": "HttpClient",
		"dependencyCallPath": [
			"get"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddCallCommand"
}
[info] [CLI] Called Command rxjs/methods/statement/create: {
	"message": "[CLI] Called Command rxjs/methods/statement/create",
	"level": "info"
}
[info] [API] Response ok: rxjs/methods/statement/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/statement/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "KN77QvGTkc",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "AYZchpxegy",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "BKuzB7v9W4",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "employee",
		"properties": {
			"id": "number"
		},
		"entityId": "response"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "BKuzB7v9W4",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "employee",
		"properties": {
			"id": "number"
		},
		"entityId": "response"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
		"name": "employee",
		"suffix": "Response",
		"properties": {
			"id": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
		"name": "employee",
		"suffix": "Response",
		"properties": {
			"id": "number"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.response.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "2Dsob9WUX2",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "employee-list",
		"properties": {
			"id": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "2Dsob9WUX2",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "employee-list",
		"properties": {
			"id": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "employee-list",
		"suffix": "Model",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "employee-list",
		"suffix": "Model",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model/employee-list.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "-OmEkIqyuA",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "create-employee",
		"properties": {
			"id": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "-OmEkIqyuA",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "create-employee",
		"properties": {
			"id": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "create-employee",
		"suffix": "Model",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "create-employee",
		"suffix": "Model",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model/create-employee.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "Q-CJQ50NSy",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "employee",
		"entityId": "dataService"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "Q-CJQ50NSy",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "employee",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
		"name": "employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services",
		"name": "employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "0xdaB9K9NE",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "person",
		"properties": {
			"id": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "0xdaB9K9NE",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "person",
		"properties": {
			"id": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "person",
		"suffix": "Model",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model",
		"name": "person",
		"suffix": "Model",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/model/person.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "k9DbTILd2-",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "employee-form",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "k9DbTILd2-",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "employee-form",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employee-form",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employee-form",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 320
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "huAr2bOydZ",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 320
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 320
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "tEXkKp-E03",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 320
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 320
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "xNESkjpT_q",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 320
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "name",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name": "text",
			"age": "text",
			"salaty": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "xNESkjpT_q",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "name",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name": "text",
			"age": "text",
			"salaty": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "name",
		"fields": {
			"name": "text",
			"age": "text",
			"salaty": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "name",
		"fields": {
			"name": "text",
			"age": "text",
			"salaty": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app.component.html",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "op3qq93Xiq",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app.component.html",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "AppComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "AppComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "op3qq93Xiq",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "6I9hlWnvq6",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "6I9hlWnvq6",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [
		{
			"label": "name",
			"templateType": "forms",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [
		{
			"label": "name",
			"templateType": "forms",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "forms"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "6I9hlWnvq6",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "form",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "forms"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "form",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-form: {
	"action": "angular-component/templates/add-form",
	"params": {
		"componentHtmlFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"position": 0,
		"propertyName": "name",
		"formTemplate": "form"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "6I9hlWnvq6",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-form"
}
[info] [CLI] Calling Command angular-component/templates/add-form: {
	"funcParams": {
		"componentHtmlFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"position": 0,
		"propertyName": "name",
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-form"
}
[info] [CommandBus]: Dispatching command AddFormToTemplateCommand: {
	"commandName": "AddFormToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
		"componentTs": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentHtml": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"className": "EmployeeFormComponent",
		"propertyName": "name",
		"position": 0,
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddFormToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddFormToTemplateCommand: {
	"commandName": "AddFormToTemplateCommand",
	"payload": {
		"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
		"componentTs": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentHtml": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
		"className": "EmployeeFormComponent",
		"propertyName": "name",
		"position": 0,
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddFormToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-form: {
	"message": "[CLI] Called Command angular-component/templates/add-form",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-form: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-form"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 1071
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "gAYyk995SQ",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 1071
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onNameSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onNameSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onNameSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onNameSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onNameSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onNameSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onNameSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onNameSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "gAYyk995SQ",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "gAYyk995SQ",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "llOO3VFEZP",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "employee-list",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "llOO3VFEZP",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "employee-list",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employee-list",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employee-list",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 794
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "vdVPcQXtSl",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 794
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onButtonClicked()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClicked"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClicked"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClicked"
								]
							}
						]
					},
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onButtonClicked()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClicked"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClicked"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClicked"
								]
							}
						]
					},
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 694
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "pzs4kpvNev",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 694
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "remove()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"remove"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "remove()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"remove"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for routing/add: {
	"action": "routing/add",
	"params": {
		"routeName": "employee-list",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "pzs4kpvNev",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for routing/add"
}
[info] [CLI] Calling Command routing/add: {
	"funcParams": {
		"routeName": "employee-list",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "employee-list",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"relatedModulePaths": [
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component-module.ts",
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "employee-list",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"relatedModulePaths": [
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-list/employee-list.component-module.ts",
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add: {
	"message": "[CLI] Called Command routing/add",
	"level": "info"
}
[info] [API] Response ok: routing/add: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts"
	},
	"level": "info",
	"message": "[API] Response ok: routing/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 875
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "nPNJg7Unc9",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 875
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onButtonClicked"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onButtonClicked()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClicked"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClicked"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClicked"
								]
							}
						]
					},
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onButtonClicked"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onButtonClicked()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClicked"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClicked"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClicked"
								]
							}
						]
					},
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for routing/add: {
	"action": "routing/add",
	"params": {
		"routeName": "employee-form",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry"
		},
		"userContext": {
			"id": "OgE52sTLuS",
			"correlationId": "nPNJg7Unc9",
			"clickedPath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for routing/add"
}
[info] [CLI] Calling Command routing/add: {
	"funcParams": {
		"routeName": "employee-form",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "employee-form",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"relatedModulePaths": [
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts",
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "employee-form",
		"componentFile": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"relatedModulePaths": [
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts",
			"/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/services/employee.service-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add: {
	"message": "[CLI] Called Command routing/add",
	"level": "info"
}
[info] [API] Response ok: routing/add: {
	"result": {
		"filePath": "/Users/lukaszchoragwicki/WebstormProjects/lowgular-course-entry/src/app/app-routing.module.ts"
	},
	"level": "info",
	"message": "[API] Response ok: routing/add"
}
